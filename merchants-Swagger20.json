{
  "swagger": "2.0",
  "info": {
    "version": "3",
    "title": "Merchants"
  },
  "host": "apisandbox.dev.clover.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-samples-languages": [
    "curl", "node", "java", "swift", "objectivec", "csharp"
  ],
  "paths": {
    "/v3/merchants/{mId}": {
      "get": {
        "description": "Get a single merchant",
        "summary": "Get a single merchant",
        "operationId": "V3MerchantsByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["employees", "bankProcessing", "externalMerchant", "merchantBoarding", "deviceBoarding", "programExpress", "hierarchy", "shifts", "orders", "address", "logos", "owner", "items", "tags", "tenders", "payments", "gateway", "printers", "modifierGroups", "properties", "tipSuggestions", "openingHours", "partnerApp", "selfBoardingApplication", "enterprises", "equipment"]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update a merchant",
        "summary": "UpdateMerchant",
        "operationId": "V3MerchantsByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [employees, bankProcessing, externalMerchant, merchantBoarding, deviceBoarding, programExpress, hierarchy, shifts, orders, address, logos, owner, items, tags, tenders, payments, gateway, printers, modifierGroups, properties, tipSuggestions, openingHours, partnerApp, selfBoardingApplication, enterprises, equipment]"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/address": {
      "get": {
        "description": "Get a merchant's address",
        "summary": "GetMerchantAddress",
        "operationId": "V3MerchantsAddressByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/gateway": {
      "get": {
        "description": "Get a merchant's payment gateway configuration",
        "summary": "GetMerchantGateway",
        "operationId": "V3MerchantsGatewayByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Gateway"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/properties": {
      "get": {
        "description": "Get a merchant's properties",
        "summary": "GetMerchantProperties",
        "operationId": "V3MerchantsPropertiesByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MerchantProperties"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update merchant properties",
        "summary": "UpdateMerchantProperties",
        "operationId": "V3MerchantsPropertiesByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MerchantProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/default_service_charge": {
      "get": {
        "description": "Get default service charge for a merchant",
        "summary": "GetDefaultServiceCharge",
        "operationId": "V3MerchantsDefaultServiceChargeByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceCharge"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/sync/{table}": {
      "get": {
        "description": "Get a sync token (deprecated)",
        "summary": "GetSyncToken",
        "operationId": "V3MerchantsSyncByMIdAndTableGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "table",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Table Name"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/tip_suggestions": {
      "get": {
        "description": "Get all tip suggestions for a merchant",
        "summary": "GetTipSuggestions",
        "operationId": "V3MerchantsTipSuggestionsByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter fields: [id, name, percentage, enabled]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TipSuggestion"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/tip_suggestions/{tId}": {
      "get": {
        "description": "Get a single tip suggestion",
        "summary": "GetTipSuggestion",
        "operationId": "V3MerchantsTipSuggestionsByMIdAndTIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "tId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TipSuggestion"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update a single tip suggestion",
        "summary": "UpdateTipSuggestion",
        "operationId": "V3MerchantsTipSuggestionsByMIdAndTIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "tId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TipSuggestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/order_types": {
      "get": {
        "description": "Get all order types for a merchant",
        "summary": "GetOrderTypes",
        "operationId": "V3MerchantsOrderTypesByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter fields: [id, deletedTime]"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [hours, attributes, categories]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderType"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Create Order Type For Merchant",
        "summary": "CreateOrderType",
        "operationId": "V3MerchantsOrderTypesByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [hours, attributes, categories]"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/order_types/{orderTypeId}": {
      "get": {
        "description": "Get a single order type",
        "summary": "GetOrderType",
        "operationId": "V3MerchantsOrderTypesByMIdAndOrderTypeIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "orderTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order Type Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [hours, attributes, categories]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderType"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update a single order type",
        "summary": "UpdateOrderType",
        "operationId": "V3MerchantsOrderTypesByMIdAndOrderTypeIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "orderTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order Type Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [hours, attributes, categories]"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "delete": {
        "description": "Delete an order type",
        "summary": "DeleteOrderType",
        "operationId": "V3MerchantsOrderTypesByMIdAndOrderTypeIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "orderTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order Type Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/order_type_categories": {
      "post": {
        "description": "Create or delete a order type category",
        "summary": "CreateOrDeleteOrderTypeCategories",
        "operationId": "V3MerchantsOrderTypeCategoriesByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/system_order_types": {
      "get": {
        "description": "Return a list of system order types",
        "summary": "GetSystemOrderTypes",
        "operationId": "V3MerchantsSystemOrderTypesByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SystemOrderType"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/roles": {
      "get": {
        "description": "Get all roles from a merchant",
        "summary": "GetRoles",
        "operationId": "V3MerchantsRolesByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter fields: [modifiedTime, systemRole, name, id, deletedTime]"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [employees]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Create a role",
        "summary": "CreateRole",
        "operationId": "V3MerchantsRolesByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/roles/{rId}": {
      "get": {
        "description": "Get a single role",
        "summary": "GetRole",
        "operationId": "V3MerchantsRolesByMIdAndRIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "rId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [employees]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update a single role",
        "summary": "UpdateRole",
        "operationId": "V3MerchantsRolesByMIdAndRIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "rId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role Id"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expandable fields: [employees]"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "delete": {
        "description": "Delete a role",
        "summary": "DeleteRole",
        "operationId": "V3MerchantsRolesByMIdAndRIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "rId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Role Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/tenders": {
      "get": {
        "description": "Get all tenders for a merchant",
        "summary": "GetMerchantTenders",
        "operationId": "V3MerchantsTendersByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter fields: [labelKey, label, opensCashDrawer, enabled, visible, instruction, id, merchantId, systemTenderId, deletedTime, modifiedTime]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tender"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Adds a new tender",
        "summary": "CreateMerchantTender",
        "operationId": "V3MerchantsTendersByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tender"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/tenders/{tenderId}": {
      "get": {
        "description": "Get a single merchant tender",
        "summary": "GetMerchantTender",
        "operationId": "V3MerchantsTendersByMIdAndTenderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "tenderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tender Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tender"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Updates an existing tender",
        "summary": "UpdateMerchantTender",
        "operationId": "V3MerchantsTendersByMIdAndTenderIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "tenderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tender Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "delete": {
        "description": "Deletes an existing tender",
        "summary": "DeleteMerchantTender",
        "operationId": "V3MerchantsTendersByMIdAndTenderIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "tenderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Tender Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/opening_hours": {
      "get": {
        "description": "Get a list this merchant opening hours",
        "summary": "GetAllMerchantOpeningHours",
        "operationId": "V3MerchantsOpeningHoursByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Create a set of merchant opening hours",
        "summary": "CreateMerchantOpeningHours",
        "operationId": "V3MerchantsOpeningHoursByMIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/opening_hours/{hId}": {
      "get": {
        "description": "Get a specific set of merchant opening hours",
        "summary": "GetMerchantOpeningHours",
        "operationId": "V3MerchantsOpeningHoursByMIdAndHIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "hId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        },
        "security": []
      },
      "post": {
        "description": "Update a set of merchant opening hours",
        "summary": "UpdateMerchantOpeningHours",
        "operationId": "V3MerchantsOpeningHoursByMIdAndHIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "hId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HoursSet"
            }
          }
        },
        "security": []
      },
      "delete": {
        "description": "Delete a set of merchant opening hours",
        "summary": "DeleteMerchantOpeningHours",
        "operationId": "V3MerchantsOpeningHoursByMIdAndHIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "hId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/devices": {
      "get": {
        "description": "Get all devices provisioned to a merchant",
        "summary": "GetMerchantDevices",
        "operationId": "V3MerchantsDevicesByMIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter fields: [id, model, name, orderPrefix, serial, deleted_time, merchant.id, merchant.name, deviceTypeName]"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "security": []
      }
    },
    "/v3/merchants/{mId}/devices/{deviceId}": {
      "get": {
        "description": "Get a single device provisioned to a merchant",
        "summary": "GetMerchantDevice",
        "operationId": "V3MerchantsDevicesByMIdAndDeviceIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Merchant Id"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Device Id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "security": []
      }
    }
  },
  "definitions": {
    "Account": {
      "title": "Account",
      "type": "object",
      "properties": {
        "primaryDeveloper": {
          "$ref": "#/definitions/Reference"
        },
        "lastLogin": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "$ref": "#/definitions/Reference"
        },
        "authFactors": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "primaryEnterprise": {
          "$ref": "#/definitions/Reference"
        },
        "developers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "inviteSent": {
          "description": "",
          "type": "boolean"
        },
        "isActive": {
          "description": "",
          "type": "boolean"
        },
        "csrfToken": {
          "description": "",
          "type": "string"
        },
        "claimedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "primaryReseller": {
          "$ref": "#/definitions/Reference"
        },
        "createdTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "resellers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "merchants": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "email": {
          "description": "",
          "type": "string"
        },
        "primaryMerchant": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "name",
        "email"
      ]
    },
    "TaxableAmountRate": {
      "title": "TaxableAmountRate",
      "type": "object",
      "properties": {
        "taxableAmount": {
          "description": "The sub-total of line items that the tax was based on. For VAT, this amount includes tax. For all others, this amount does not include tax.",
          "type": "integer",
          "format": "int64"
        },
        "isVat": {
          "description": "Whether the taxable amount includes tax.",
          "type": "boolean"
        },
        "rate": {
          "description": "The tax rate. 100% = 1e7.",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Tax rate name. This field is optional.",
          "type": "string"
        },
        "transactionRef": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Tax rate id.",
          "type": "string"
        },
        "taxAmount": {
          "description": "The amount of tax collected. In cases where there are multiple payments for an order then it may be necessary to add an extra cent of tax to the last payment.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AppBundle": {
      "title": "AppBundle",
      "type": "object",
      "properties": {
        "bundleCountries": {
          "description": "Bundle country options for this app bundle",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppBundleCountry"
          }
        },
        "pricePerDevice": {
          "description": "DEPRECATED: Instead use per country pricing in bundleCountries",
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "description": "DEPRECATED: Instead use per country pricing in bundleCountries",
          "type": "integer",
          "format": "int64"
        },
        "includedApps": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "name": {
          "description": "The name of the bundle",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      }
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "zip": {
          "description": "",
          "type": "string"
        },
        "country": {
          "description": "",
          "type": "string"
        },
        "phoneNumber": {
          "description": "",
          "type": "string"
        },
        "address3": {
          "description": "",
          "type": "string"
        },
        "address2": {
          "description": "",
          "type": "string"
        },
        "city": {
          "description": "",
          "type": "string"
        },
        "address1": {
          "description": "",
          "type": "string"
        },
        "state": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "properties": {
        "customerSince": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "description": "First/given name of the customer",
          "type": "string"
        },
        "lastName": {
          "description": "Last name/surname of the customer",
          "type": "string"
        },
        "addresses": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "metadata": {
          "$ref": "#/definitions/CustomerMetadata"
        },
        "emailAddresses": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress"
          }
        },
        "cards": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        },
        "marketingAllowed": {
          "description": "",
          "type": "boolean"
        },
        "merchant": {
          "$ref": "#/definitions/Reference"
        },
        "orders": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "phoneNumbers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        }
      }
    },
    "ServiceChargeAmount": {
      "title": "ServiceChargeAmount",
      "type": "object",
      "properties": {
        "amount": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        }
      }
    },
    "IdType": {
      "title": "idType",
      "example": "DRIVERS_LICENSE",
      "type": "string",
      "enum": [
        "DRIVERS_LICENSE",
        "PASSPORT"
      ]
    },
    "CashAdvanceCustomerIdentification": {
      "title": "CashAdvanceCustomerIdentification",
      "type": "object",
      "properties": {
        "addressZipCode": {
          "description": "",
          "type": "string"
        },
        "addressCountry": {
          "description": "",
          "type": "string"
        },
        "idType": {
          "$ref": "#/definitions/IdType"
        },
        "serialNumber": {
          "description": "Identification serial number",
          "type": "string"
        },
        "maskedSerialNumber": {
          "description": "Masked identification serial number",
          "type": "string"
        },
        "issuingState": {
          "description": "State in which identification was issued",
          "type": "string"
        },
        "addressState": {
          "description": "",
          "type": "string"
        },
        "customerName": {
          "description": "Full customer name",
          "type": "string"
        },
        "issuingCountry": {
          "description": "Country in which identification was issued",
          "type": "string"
        },
        "addressStreet1": {
          "description": "",
          "type": "string"
        },
        "addressStreet2": {
          "description": "",
          "type": "string"
        },
        "encryptedSerialNumber": {
          "description": "Encrypted identification serial number",
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date in format MMDDYYYY",
          "type": "string"
        },
        "addressCity": {
          "description": "",
          "type": "string"
        }
      }
    },
    "ItemStock": {
      "title": "ItemStock",
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "description": "Current count of this item in stock",
          "type": "integer",
          "format": "int32"
        },
        "stockCount": {
          "description": "DEPRECATED: use quantity instead",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MerchantBankProcessing": {
      "title": "MerchantBankProcessing",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Date record modified",
          "type": "integer",
          "format": "int64"
        },
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "bin": {
          "description": "Bank identification number of bank",
          "type": "string"
        },
        "ica": {
          "description": "Interbank Card Association",
          "type": "string"
        },
        "achRollup": {
          "description": "ACH rollup",
          "type": "string"
        },
        "clearingCode": {
          "description": "Clearing code",
          "type": "string"
        },
        "createdTime": {
          "description": "Date record created",
          "type": "integer",
          "format": "int64"
        },
        "payCode": {
          "description": "Pay code",
          "type": "string"
        },
        "payCycle": {
          "description": "Pay cycle",
          "type": "string"
        }
      }
    },
    "Type": {
      "title": "type",
      "example": "NETWORK",
      "type": "string",
      "enum": [
        "NETWORK",
        "MY_LOCAL"
      ]
    },
    "Printer": {
      "title": "Printer",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address of a network printer",
          "type": "string"
        },
        "model": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "mac": {
          "description": "MAC address of a network printer",
          "type": "string"
        }
      }
    },
    "LineItemPayment": {
      "title": "LineItemPayment",
      "type": "object",
      "properties": {
        "binName": {
          "description": "Bin this line item payment was for",
          "type": "string"
        },
        "percentage": {
          "description": "Percent of this line item covered by this payment",
          "type": "integer",
          "format": "int64"
        },
        "refunded": {
          "description": "Payment has been refunded",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier; TBD this is confusing because it's used as either line item id or payment id",
          "type": "string"
        }
      }
    },
    "PriceType": {
      "title": "priceType",
      "example": "FIXED",
      "type": "string",
      "enum": [
        "FIXED",
        "VARIABLE",
        "PER_UNIT"
      ]
    },
    "Item": {
      "title": "Item",
      "type": "object",
      "properties": {
        "itemGroup": {
          "$ref": "#/definitions/Reference"
        },
        "modifiedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "description": "Product code, e.g. UPC or EAN",
          "type": "string"
        },
        "cost": {
          "description": "Cost of the item to merchant, as opposed to customer price",
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "description": "True if this item is hidden from Clover Register App",
          "type": "boolean"
        },
        "unitName": {
          "description": "Unit name, e.g. oz, lb",
          "type": "string"
        },
        "priceType": {
          "$ref": "#/definitions/PriceType"
        },
        "alternateName": {
          "description": "Alternate name of the item",
          "type": "string"
        },
        "isRevenue": {
          "description": "True if this item should be counted as revenue, for example gift cards and donations would not",
          "type": "boolean"
        },
        "modifierGroups": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "Tags associated with this item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taxRates": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "itemStock": {
          "$ref": "#/definitions/ItemStock"
        },
        "price": {
          "description": "Price of the item, typically in cents; use priceType and merchant currency to determine actual item price. For non-VAT merchants, this field is exclusive of tax. For VAT merchants, this field is inclusive of tax.",
          "type": "integer",
          "format": "int64"
        },
        "options": {
          "description": "List of options pertaining to this item's attribute variation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the item",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "categories": {
          "description": "Categories associated with this item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sku": {
          "description": "SKU of the item",
          "type": "string"
        },
        "deletedTime": {
          "description": "Timestamp when item was last deleted",
          "type": "integer",
          "format": "int64"
        },
        "defaultTaxRates": {
          "description": "Flag to indicate whether or not to use default tax rates",
          "type": "boolean"
        },
        "stockCount": {
          "description": "DEPRECATED: use itemStock instead",
          "type": "integer",
          "format": "int64"
        },
        "priceWithoutVat": {
          "description": "The price without value-added tax (VAT). For non-VAT merchants, this field is ignored. For VAT merchants, this field is the base price of an item.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "price",
        "name"
      ]
    },
    "CustomerIdMethod": {
      "title": "customerIdMethod",
      "example": "NAME",
      "type": "string",
      "enum": [
        "NAME",
        "TABLE",
        "NAME_TABLE"
      ]
    },
    "HoursAvailable": {
      "title": "hoursAvailable",
      "example": "ALL",
      "type": "string",
      "enum": [
        "ALL",
        "BUSINESS",
        "CUSTOM"
      ]
    },
    "OrderType": {
      "title": "OrderType",
      "type": "object",
      "properties": {
        "customerIdMethod": {
          "$ref": "#/definitions/CustomerIdMethod"
        },
        "maxRadius": {
          "description": "The maximum radius allowed for an order (i.e. delivery)",
          "type": "integer",
          "format": "int64"
        },
        "hours": {
          "$ref": "#/definitions/HoursSet"
        },
        "taxable": {
          "description": "If this order type is taxable",
          "type": "boolean"
        },
        "filterCategories": {
          "description": "If set to false, then this order type includes all of the merchant's categories. Otherwise, it only contains the categories defined in the \"categories\" field on this object.",
          "type": "boolean"
        },
        "fee": {
          "description": "The price of a fee added to this order type, not fully implemented at this time.",
          "type": "integer",
          "format": "int64"
        },
        "avgOrderTime": {
          "description": "The average time it takes to complete the order",
          "type": "integer",
          "format": "int64"
        },
        "label": {
          "description": "Label Key",
          "type": "string"
        },
        "systemOrderTypeId": {
          "description": "Optional system order type that this order type is associated with.",
          "type": "string"
        },
        "isHidden": {
          "description": "If this order type is hidden on the register",
          "type": "boolean"
        },
        "isDefault": {
          "description": "If this order type is the default",
          "type": "boolean"
        },
        "minOrderAmount": {
          "description": "The minimum amount required for an order to be placed",
          "type": "integer",
          "format": "int64"
        },
        "isDeleted": {
          "description": "If this order type is deleted",
          "type": "boolean"
        },
        "hoursAvailable": {
          "$ref": "#/definitions/HoursAvailable"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "maxOrderAmount": {
          "description": "The maximum amount for an order allowed",
          "type": "integer",
          "format": "int64"
        },
        "categories": {
          "description": "The categories of items that can be assigned to this order type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "labelKey": {
          "description": "Label Key",
          "type": "string"
        }
      }
    },
    "CreditRefund": {
      "title": "CreditRefund",
      "type": "object",
      "properties": {
        "clientCreatedTime": {
          "description": "The time when the refund was recorded on the client",
          "type": "integer",
          "format": "int64"
        },
        "orderRef": {
          "$ref": "#/definitions/Reference"
        },
        "germanInfo": {
          "$ref": "#/definitions/GermanInfo"
        },
        "appTracking": {
          "$ref": "#/definitions/AppTracking"
        },
        "createdTime": {
          "description": "The time when the refund was recorded on the server",
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "credit": {
          "$ref": "#/definitions/Reference"
        },
        "employee": {
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MerchantHierarchy": {
      "title": "MerchantHierarchy",
      "type": "object",
      "properties": {
        "chain": {
          "description": "Chain bank",
          "type": "string"
        },
        "agent": {
          "description": "Agent ID",
          "type": "string"
        },
        "business": {
          "description": "Business ID",
          "type": "string"
        },
        "dbaAttention": {
          "description": "DBA attention name",
          "type": "string"
        },
        "ddaAccountNumber": {
          "description": "DDA account number",
          "type": "string"
        },
        "dbaState": {
          "description": "DBA state",
          "type": "string"
        },
        "billState": {
          "description": "Bill To state",
          "type": "string"
        },
        "mid": {
          "description": "Merchant ID",
          "type": "string"
        },
        "dbaZip": {
          "description": "DBA zip",
          "type": "string"
        },
        "billZip": {
          "description": "Bill To ZIP",
          "type": "string"
        },
        "dbaName": {
          "description": "DBA name",
          "type": "string"
        },
        "billCity": {
          "description": "Bill To city",
          "type": "string"
        },
        "billPhoneNumber": {
          "description": "Bill To phone number",
          "type": "string"
        },
        "dbaCity": {
          "description": "DBA city",
          "type": "string"
        },
        "legalName": {
          "description": "Legal name",
          "type": "string"
        },
        "abaAccountNumber": {
          "description": "ABA account number",
          "type": "string"
        },
        "billName": {
          "description": "Bill to name",
          "type": "string"
        },
        "bank": {
          "description": "Bank ID",
          "type": "string"
        },
        "corporate": {
          "description": "Corporate ID",
          "type": "string"
        },
        "dbaAddress": {
          "description": "DBA address",
          "type": "string"
        },
        "billToAttention": {
          "description": "Bill To attention",
          "type": "string"
        },
        "dbaPhoneNumber": {
          "description": "DBA phone number",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        }
      }
    },
    "GermanInfo": {
      "title": "GermanInfo",
      "type": "object",
      "properties": {
        "customerTransactionDOLValues": {
          "description": "",
          "type": "string"
        },
        "traceNumber": {
          "description": "",
          "type": "string"
        },
        "transactionAID": {
          "description": "",
          "type": "string"
        },
        "merchantJournalDOL": {
          "description": "",
          "type": "string"
        },
        "transactionTypeGermany": {
          "description": "",
          "type": "string"
        },
        "sepaElvMandate": {
          "description": "",
          "type": "string"
        },
        "merchantJournalDOLValues": {
          "description": "",
          "type": "string"
        },
        "hostResponsePrintDataBM60": {
          "description": "",
          "type": "string"
        },
        "sepaElvReceiptFormat": {
          "description": "",
          "type": "string"
        },
        "cardSequenceNumber": {
          "description": "",
          "type": "string"
        },
        "receiptNumber": {
          "description": "",
          "type": "string"
        },
        "transactionCaseGermany": {
          "description": "",
          "type": "string"
        },
        "sepaElvIban": {
          "description": "",
          "type": "string"
        },
        "cardTrack2": {
          "description": "",
          "type": "string"
        },
        "receiptType": {
          "description": "",
          "type": "string"
        },
        "sepaElvCreditorId": {
          "description": "",
          "type": "string"
        },
        "terminalID": {
          "description": "",
          "type": "string"
        },
        "oldTraceNumber": {
          "description": "",
          "type": "string"
        },
        "configProductLabel": {
          "description": "",
          "type": "string"
        },
        "sepaElvExtAppLabel": {
          "description": "",
          "type": "string"
        },
        "sepaElvPreNotification": {
          "description": "",
          "type": "string"
        },
        "configMerchantId": {
          "description": "",
          "type": "string"
        },
        "hostResponseAidParBMP53": {
          "description": "",
          "type": "string"
        },
        "sepaElvMandateId": {
          "description": "",
          "type": "string"
        },
        "transactionScriptResults": {
          "description": "",
          "type": "string"
        },
        "transactionMSApp": {
          "description": "",
          "type": "string"
        },
        "merchantTransactionDOLValues": {
          "description": "",
          "type": "string"
        }
      }
    },
    "SignatureEntryLocation": {
      "title": "signatureEntryLocation",
      "example": "ON_SCREEN",
      "type": "string",
      "enum": [
        "ON_SCREEN",
        "ON_PAPER",
        "NONE"
      ]
    },
    "TipMode": {
      "title": "tipMode",
      "example": "TIP_PROVIDED",
      "type": "string",
      "enum": [
        "TIP_PROVIDED",
        "ON_SCREEN_BEFORE_PAYMENT",
        "ON_SCREEN_AFTER_PAYMENT",
        "ON_PAPER",
        "NO_TIP"
      ]
    },
    "TransactionSettings": {
      "title": "TransactionSettings",
      "type": "object",
      "properties": {
        "disableCashBack": {
          "description": "",
          "type": "boolean"
        },
        "disableDuplicateCheck": {
          "description": "",
          "type": "boolean"
        },
        "cloverShouldHandleReceipts": {
          "description": "",
          "type": "boolean"
        },
        "returnResultOnTransactionComplete": {
          "description": "",
          "type": "boolean"
        },
        "cardEntryMethods": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "disableRestartTransactionOnFailure": {
          "description": "",
          "type": "boolean"
        },
        "forceOfflinePayment": {
          "description": "",
          "type": "boolean"
        },
        "signatureEntryLocation": {
          "$ref": "#/definitions/SignatureEntryLocation"
        },
        "tipMode": {
          "$ref": "#/definitions/TipMode"
        },
        "allowOfflinePayment": {
          "description": "",
          "type": "boolean"
        },
        "disableReceiptSelection": {
          "description": "",
          "type": "boolean"
        },
        "autoAcceptSignature": {
          "description": "",
          "type": "boolean"
        },
        "forcePinEntryOnSwipe": {
          "description": "",
          "type": "boolean"
        },
        "signatureThreshold": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "tippableAmount": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "autoAcceptPaymentConfirmations": {
          "description": "",
          "type": "boolean"
        },
        "approveOfflinePaymentWithoutPrompt": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "CustomerMetadata": {
      "title": "CustomerMetadata",
      "type": "object",
      "properties": {
        "note": {
          "description": "A note about the customer.",
          "type": "string"
        },
        "modifiedTime": {
          "description": "The timestamp from when this customer's data was last updated.",
          "type": "integer",
          "format": "int64"
        },
        "businessName": {
          "description": "The name of the business the customer is associated with.",
          "type": "string"
        },
        "dobDay": {
          "description": "The day part of the date of birth for this customer.",
          "type": "integer",
          "format": "int32"
        },
        "dobYear": {
          "description": "The year part of the date of birth for this customer. This part of the date of birth is optional, i.e., it's possible that only dobMonth and dobDay are populated.",
          "type": "integer",
          "format": "int32"
        },
        "dobMonth": {
          "description": "The month part of the date of birth for this customer.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Shift": {
      "title": "Shift",
      "type": "object",
      "properties": {
        "inTime": {
          "description": "Clock in time",
          "type": "integer",
          "format": "int64"
        },
        "cashTipsCollected": {
          "description": "Amount of cash tips collected",
          "type": "integer",
          "format": "int64"
        },
        "serverBanking": {
          "description": "Whether the employee used server banking",
          "type": "boolean"
        },
        "overrideInEmployee": {
          "$ref": "#/definitions/Employee"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "overrideInTime": {
          "description": "Overridden clock in time",
          "type": "integer",
          "format": "int64"
        },
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "overrideOutEmployee": {
          "$ref": "#/definitions/Employee"
        },
        "outTime": {
          "description": "Clock out time",
          "type": "integer",
          "format": "int64"
        },
        "overrideOutTime": {
          "description": "Overridden clock out time",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PayType": {
      "title": "payType",
      "example": "SPLIT_GUEST",
      "type": "string",
      "enum": [
        "SPLIT_GUEST",
        "SPLIT_ITEM",
        "SPLIT_CUSTOM",
        "FULL"
      ]
    },
    "Order": {
      "title": "Order",
      "type": "object",
      "properties": {
        "note": {
          "description": "An arbitrary string with information about this order, may be printed on the order receipt and displayed in apps",
          "type": "string"
        },
        "orderType": {
          "$ref": "#/definitions/OrderType"
        },
        "modifiedTime": {
          "description": "Last modified time of the order",
          "type": "integer",
          "format": "int64"
        },
        "preAuths": {
          "description": "Pre-authorizations associated with this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "payments": {
          "description": "Payments that were made for this order. If multiple payments were made, then the payType field should reflect the method used to split the total amount.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "authorizations": {
          "description": "Card authorizations associated with this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authorization"
          }
        },
        "employee": {
          "$ref": "#/definitions/Reference"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "deletedTimestamp": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "refunds": {
          "description": "Refunds that were made for this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          }
        },
        "lineItems": {
          "description": "Line items associated with this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        },
        "total": {
          "description": "Total price of the order in cents",
          "type": "integer",
          "format": "int64"
        },
        "serviceCharge": {
          "$ref": "#/definitions/ServiceCharge"
        },
        "payType": {
          "$ref": "#/definitions/PayType"
        },
        "discounts": {
          "description": "Discounts applied to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        },
        "credits": {
          "description": "Credits associated with this order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Credit"
          }
        },
        "createdTime": {
          "description": "Creation timestamp",
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "description": "Currency of this order. For example, \"USD\"",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "customers": {
          "description": "List of customers associated with this order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        },
        "state": {
          "description": "A String generally describing the state of this Order. The value null indicates an empty Order that is not displayed in user interfaces. Other value such as \"open\" and \"locked\" are not checked or enforced by client or server and thus are not useful for making any logical decisions about this Order.",
          "type": "string"
        },
        "groupLineItems": {
          "description": "Whether similar line items should be grouped together on the receipt that this order generates. Item \"similarity\" is based on items having matching values for a set of properties including price, modifiers, and discounts.",
          "type": "boolean"
        },
        "isVat": {
          "description": "This order was created by merchant with VAT enabled.",
          "type": "boolean"
        },
        "manualTransaction": {
          "description": "Whether this order represents a manual transaction. A manual transaction is a transaction that has an arbitrary amount defined and is not associated with any inventory items. For example, the Clover Sale App and Clover Manual Transaction App create manual transactions. A manual transactions will have a single associated line item to hold the sale amount, but the generated receipt will display this differently to indicate that it is not considered a typical order with inventory items.",
          "type": "boolean"
        },
        "voids": {
          "description": "Voided payments associated with this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "clientCreatedTime": {
          "description": "The time at which the client created this order",
          "type": "integer",
          "format": "int64"
        },
        "testMode": {
          "description": "Whether this order was created in test mode. Payments made against test orders are not processed. Test mode orders can be deleted from the Orders App on the merchant's device or web dashboard (https://www.clover.com/orders/m/{mId}/orders). They will also be deleted when the device sends a POST to the /v2/merchant/{mId}/orders/delete_all_tests endpoint.",
          "type": "boolean"
        },
        "taxRemoved": {
          "description": "If true then this order should not have taxes applied to it",
          "type": "boolean"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Device": {
      "title": "Device",
      "type": "object",
      "properties": {
        "offlinePaymentsTotalPaymentsLimit": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "simIccid": {
          "description": "The ICCID of the SIM in the device (if present)",
          "type": "string"
        },
        "offlinePaymentsTotalPaymentsLimitDefault": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "terminalId": {
          "description": "The merchant device's terminal Id. FD-IPG sets the merchant_device terminal Id for LATAM devices",
          "type": "string"
        },
        "imsi": {
          "description": "The IMSI of the SIM in the device (if present)",
          "type": "string"
        },
        "offlinePaymentsLimitDefault": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "terminalPrefix": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "maxOfflineDays": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "model": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "offlinePaymentsMaxTotalPaymentsLimit": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "pinDisabled": {
          "description": "Whether this device has PIN prompt disabled.",
          "type": "boolean"
        },
        "merchant": {
          "$ref": "#/definitions/Reference"
        },
        "deviceTypeName": {
          "description": "The type of device. Possible values are \"GOLDLEAF\" (Station), \"LEAFCUTTER\" (Mobile), \"MAPLECUTTER\" (Mini), \"CLOVER_GO\" (Clover Go), or \"OTHER\" (Unknown).",
          "type": "string"
        },
        "bundleIndicator": {
          "description": "",
          "type": "string"
        },
        "offlinePaymentsMaxLimit": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "deviceCertificate": {
          "description": "",
          "type": "string"
        },
        "offlinePaymentsLimit": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "showOfflinePayments": {
          "description": "",
          "type": "boolean"
        },
        "orderPrefix": {
          "description": "A prefix that will be applied to order numbers. This is useful if the merchant and/or customer needs to track which device an order came from.",
          "type": "string"
        },
        "pedCertificate": {
          "description": "",
          "type": "string"
        },
        "offlinePaymentsAll": {
          "description": "",
          "type": "boolean"
        },
        "secureReports": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "serial": {
          "description": "The device's serial number.",
          "type": "string"
        },
        "offlinePaymentsPromptThresholdDefault": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "offlinePayments": {
          "description": "",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the device (if entered)",
          "type": "string"
        },
        "imei": {
          "description": "The IMEI of the device",
          "type": "string"
        },
        "allowStoreAndForward": {
          "description": "",
          "type": "boolean"
        },
        "offlinePaymentsPromptThreshold": {
          "description": "",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "IdentityDocument": {
      "title": "IdentityDocument",
      "type": "object",
      "properties": {
        "number": {
          "description": "The identification number",
          "type": "string"
        },
        "type": {
          "description": "Type of personal identification: National Document, Passport, etc",
          "type": "string"
        }
      }
    },
    "CashAdvanceExtra": {
      "title": "CashAdvanceExtra",
      "type": "object",
      "properties": {
        "cashAdvanceCustomerIdentification": {
          "$ref": "#/definitions/CashAdvanceCustomerIdentification"
        },
        "cashAdvanceSerialNum": {
          "description": "",
          "type": "string"
        }
      }
    },
    "EmailAddress": {
      "title": "EmailAddress",
      "type": "object",
      "properties": {
        "emailAddress": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "verifiedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "emailAddress"
      ]
    },
    "Card": {
      "title": "Card",
      "type": "object",
      "properties": {
        "last4": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "cardType": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "first6": {
          "description": "",
          "type": "string"
        },
        "expirationDate": {
          "description": "",
          "type": "string"
        },
        "token": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "last4",
        "first6"
      ]
    },
    "EntryType": {
      "title": "entryType",
      "example": "SWIPED",
      "type": "string",
      "enum": [
        "SWIPED",
        "KEYED",
        "VOICE",
        "VAULTED",
        "OFFLINE_SWIPED",
        "OFFLINE_KEYED",
        "EMV_CONTACT",
        "EMV_CONTACTLESS",
        "MSD_CONTACTLESS",
        "PINPAD_MANUAL_ENTRY",
        "QR_CODE",
        "SCANNED"
      ]
    },
    "AvsResult": {
      "title": "avsResult",
      "example": "SUCCESS",
      "type": "string",
      "enum": [
        "SUCCESS",
        "ZIP_CODE_MATCH",
        "ZIP_CODE_MATCH_ADDRESS_NOT_CHECKED",
        "ADDRESS_MATCH",
        "ADDRESS_MATCH_ZIP_NOT_CHECKED",
        "NEITHER_MATCH",
        "SERVICE_FAILURE",
        "SERVICE_UNAVAILABLE",
        "NOT_CHECKED",
        "ZIP_CODE_NOT_MATCHED_ADDRESS_NOT_CHECKED",
        "ADDRESS_NOT_MATCHED_ZIP_CODE_NOT_CHECKED"
      ]
    },
    "CardType": {
      "title": "cardType",
      "example": "VISA",
      "type": "string",
      "enum": [
        "VISA",
        "MC",
        "AMEX",
        "DISCOVER",
        "DINERS_CLUB",
        "JCB",
        "MAESTRO",
        "SOLO",
        "LASER",
        "CHINA_UNION_PAY",
        "CARTE_BLANCHE",
        "UNKNOWN",
        "GIFT_CARD",
        "EBT",
        "GIROCARD",
        "INTERAC",
        "OTHER"
      ]
    },
    "Type3637": {
      "title": "type3637",
      "example": "AUTH",
      "type": "string",
      "enum": [
        "AUTH",
        "PREAUTH",
        "PREAUTHCAPTURE",
        "ADJUST",
        "VOID",
        "VOIDRETURN",
        "RETURN",
        "REFUND",
        "NAKEDREFUND",
        "GETBALANCE",
        "BATCHCLOSE",
        "ACTIVATE",
        "BALANCE_LOCK",
        "LOAD",
        "CASHOUT",
        "CASHOUT_ACTIVE_STATUS",
        "REDEMPTION",
        "REDEMPTION_UNLOCK",
        "RELOAD",
        "CASH_ADVANCE",
        "VOID_CREDIT",
        "REFUND_CREDIT",
        "INTERNET_ACTIVATE",
        "TOKEN_REQUEST",
        "VERIFICATION"
      ]
    },
    "GatewayTxState": {
      "title": "gatewayTxState",
      "example": "INITIATED",
      "type": "string",
      "enum": [
        "INITIATED",
        "INITIATED_ON_AUTH",
        "ACKNOWLEDGED",
        "CONNECT_FAILED",
        "TIMEOUT",
        "FAILED",
        "REVERSE_INITIATED",
        "REVERSE_INITIATED_ON_AUTH",
        "REVERSED",
        "REVERSAL_FAILED",
        "EXTERNAL"
      ]
    },
    "State": {
      "title": "state",
      "example": "PENDING",
      "type": "string",
      "enum": [
        "PENDING",
        "CLOSED"
      ]
    },
    "CardTransaction": {
      "title": "CardTransaction",
      "type": "object",
      "properties": {
        "entryType": {
          "$ref": "#/definitions/EntryType"
        },
        "last4": {
          "description": "The last four digits of the card number",
          "type": "string"
        },
        "authCode": {
          "description": "Authorization code (if successful)",
          "type": "string"
        },
        "avsResult": {
          "$ref": "#/definitions/AvsResult"
        },
        "cardType": {
          "$ref": "#/definitions/CardType"
        },
        "transactionNo": {
          "description": "",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type3637"
        },
        "first6": {
          "description": "The first four digits of the card number",
          "type": "string"
        },
        "referenceId": {
          "description": "",
          "type": "string"
        },
        "begBalance": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "token": {
          "description": "",
          "type": "string"
        },
        "vaultedCard": {
          "$ref": "#/definitions/VaultedCard"
        },
        "endBalance": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "cardholderName": {
          "description": "",
          "type": "string"
        },
        "gatewayTxState": {
          "$ref": "#/definitions/GatewayTxState"
        },
        "currency": {
          "description": "Currency code",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State"
        }
      }
    },
    "SystemRole": {
      "title": "systemRole",
      "example": "ADMIN",
      "type": "string",
      "enum": [
        "ADMIN",
        "MANAGER",
        "EMPLOYEE"
      ]
    },
    "Role": {
      "title": "Role",
      "type": "object",
      "properties": {
        "systemRole": {
          "$ref": "#/definitions/SystemRole"
        },
        "name": {
          "description": "Full name of the role",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      },
      "required": [
        "systemRole",
        "name"
      ]
    },
    "AppBundleCountry": {
      "title": "AppBundleCountry",
      "type": "object",
      "properties": {
        "country": {
          "description": "The country of the app bundle country",
          "type": "string"
        },
        "pricePerDevice": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "appBundle": {
          "description": "DB reference to app bundle that contains this app bundle country.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OrderTitle": {
      "title": "orderTitle",
      "example": "NONE",
      "type": "string",
      "enum": [
        "NONE",
        "MANUAL",
        "AUTOMATIC"
      ]
    },
    "BusinessTypeCode": {
      "title": "businessTypeCode",
      "example": "FULL_SERVICE_RESTAURANT",
      "type": "string",
      "enum": [
        "FULL_SERVICE_RESTAURANT",
        "QUICK_SERVICE_RESTAURANT",
        "COFFEE_SHOP",
        "BAKERY",
        "BAR",
        "FOOD_TRUCK",
        "FROZEN_YOGURT",
        "PIZZA",
        "DELI",
        "OTHER_RESTAURANT",
        "BOUTIQUE",
        "CONVENIENCE_STORE",
        "GROCERY",
        "LIQUOR_STORE",
        "VAPE_SHOP",
        "JEWELRY",
        "FLORIST",
        "OTHER_RETAIL",
        "FITNESS",
        "SPA",
        "HAIR_SALON",
        "HOME_AND_REPAIR",
        "PROFESSIONAL_SERVICES",
        "CATERING",
        "OTHER_SERVICE"
      ]
    },
    "MerchantProperties": {
      "title": "MerchantProperties",
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "description": "",
          "type": "string"
        },
        "removeTaxEnabled": {
          "description": "",
          "type": "boolean"
        },
        "tipRateDefault": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "cashBackOptions": {
          "description": "List of cash back possible cash back amounts",
          "type": "string"
        },
        "autoPrint": {
          "description": "",
          "type": "boolean"
        },
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "defaultCurrency": {
          "description": "",
          "type": "string"
        },
        "groupLineItems": {
          "description": "",
          "type": "boolean"
        },
        "manualCloseout": {
          "description": "",
          "type": "boolean"
        },
        "onPaperTipSignatures": {
          "description": "",
          "type": "boolean"
        },
        "accountType": {
          "description": "",
          "type": "string"
        },
        "hierarchy": {
          "description": "Merchant hierarchy (Business, Bank, Agent, Corp, Chain). Supplied by First Data.",
          "type": "string"
        },
        "vat": {
          "description": "Whether this merchant is in a VAT country",
          "type": "boolean"
        },
        "alternateInventoryNames": {
          "description": "",
          "type": "boolean"
        },
        "appBillingSystem": {
          "description": "Temporary while we are switching US billing systems",
          "type": "string"
        },
        "cashBackEnabled": {
          "description": "Whether cash back is enabled for this merchant",
          "type": "boolean"
        },
        "maxCashBack": {
          "description": "The maximum amount of cash back that the customer can select.",
          "type": "integer",
          "format": "int64"
        },
        "showCloseoutOrders": {
          "description": "",
          "type": "boolean"
        },
        "orderTitleMax": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "merchantBoardingStatus": {
          "description": "This is used to identify if the merchant is self-boarded",
          "type": "string"
        },
        "timezone": {
          "description": "",
          "type": "string"
        },
        "supportPhone": {
          "description": "",
          "type": "string"
        },
        "logInClockInPrompt": {
          "description": "",
          "type": "boolean"
        },
        "sendCloseoutEmail": {
          "description": "",
          "type": "boolean"
        },
        "tipsEnabled": {
          "description": "",
          "type": "boolean"
        },
        "receiptProperties": {
          "description": "",
          "type": "string"
        },
        "summaryHour": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "deleteOrders": {
          "description": "",
          "type": "boolean"
        },
        "locale": {
          "description": "The locale of the merchant.",
          "type": "string"
        },
        "vatTaxName": {
          "description": "The VAT tax name that is shown on receipts",
          "type": "string"
        },
        "marketingPreferenceText": {
          "description": "",
          "type": "string"
        },
        "infoleaseSuppressPlanBilling": {
          "description": "",
          "type": "boolean"
        },
        "orderTitle": {
          "$ref": "#/definitions/OrderTitle"
        },
        "marketingEnabled": {
          "description": "",
          "type": "boolean"
        },
        "notesOnOrders": {
          "description": "",
          "type": "boolean"
        },
        "hasDefaultEmployee": {
          "description": "",
          "type": "boolean"
        },
        "stayInCategory": {
          "description": "",
          "type": "boolean"
        },
        "allowClockOutWithOpenOrders": {
          "description": "",
          "type": "boolean"
        },
        "updateStock": {
          "description": "",
          "type": "boolean"
        },
        "infoleaseSuppressBilling": {
          "description": "",
          "type": "boolean"
        },
        "ddaAccountNumber": {
          "description": "The Masked DDA Account Number.  Supplied by First Data.",
          "type": "string"
        },
        "autoLogout": {
          "description": "",
          "type": "boolean"
        },
        "businessTypeCode": {
          "$ref": "#/definitions/BusinessTypeCode"
        },
        "alwaysRequireSignature": {
          "description": "Whether we always require a signature for most transactions (excluding contactless under cvm limit)",
          "type": "boolean"
        },
        "bankMarker": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "abaAccountNumber": {
          "description": "The ABA Account Number.  Supplied by First Data.",
          "type": "string"
        },
        "trackStock": {
          "description": "",
          "type": "boolean"
        },
        "resetOnReportingTime": {
          "description": "",
          "type": "boolean"
        },
        "supportEmail": {
          "description": "",
          "type": "string"
        },
        "hasConsented": {
          "description": "Whether or not merchant has consented to infolease billing",
          "type": "boolean"
        },
        "pinLength": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "signatureThreshold": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "shippingAddress": {
          "description": "",
          "type": "string"
        }
      }
    },
    "VoidReason": {
      "title": "voidReason",
      "example": "USER_CANCEL",
      "type": "string",
      "enum": [
        "USER_CANCEL",
        "TRANSPORT_ERROR",
        "REJECT_SIGNATURE",
        "REJECT_PARTIAL_AUTH",
        "NOT_APPROVED",
        "FAILED",
        "AUTH_CLOSED_NEW_CARD",
        "DEVELOPER_PAY_PARTIAL_AUTH",
        "REJECT_DUPLICATE",
        "REJECT_OFFLINE",
        "GIFTCARD_LOAD_FAILED",
        "USER_GIFTCARD_LOAD_CANCEL",
        "DEVELOPER_PAY_TIP_ADJUST_FAILED"
      ]
    },
    "Result": {
      "title": "result",
      "example": "SUCCESS",
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAIL",
        "INITIATED",
        "VOIDED",
        "VOIDING",
        "VOID_FAILED",
        "AUTH",
        "AUTH_COMPLETED"
      ]
    },
    "Payment": {
      "title": "Payment",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Last modified time of the payment",
          "type": "integer",
          "format": "int64"
        },
        "note": {
          "description": "",
          "type": "string"
        },
        "voidReason": {
          "$ref": "#/definitions/VoidReason"
        },
        "lineItemPayments": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemPayment"
          }
        },
        "germanInfo": {
          "$ref": "#/definitions/GermanInfo"
        },
        "cashTendered": {
          "description": "Amount of cash given by the customer",
          "type": "integer",
          "format": "int64"
        },
        "cardTransaction": {
          "$ref": "#/definitions/CardTransaction"
        },
        "transactionSettings": {
          "$ref": "#/definitions/TransactionSettings"
        },
        "cashbackAmount": {
          "description": "Amount given back in a cash back transaction",
          "type": "integer",
          "format": "int64"
        },
        "cashAdvanceExtra": {
          "$ref": "#/definitions/CashAdvanceExtra"
        },
        "employee": {
          "$ref": "#/definitions/Reference"
        },
        "refunds": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          }
        },
        "result": {
          "$ref": "#/definitions/Result"
        },
        "offline": {
          "description": "",
          "type": "boolean"
        },
        "serviceCharge": {
          "$ref": "#/definitions/ServiceChargeAmount"
        },
        "taxRates": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTaxRate"
          }
        },
        "createdTime": {
          "description": "Time payment was recorded on server",
          "type": "integer",
          "format": "int64"
        },
        "externalPaymentId": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/Reference"
        },
        "tender": {
          "$ref": "#/definitions/Tender"
        },
        "amount": {
          "description": "Total amount paid",
          "type": "integer",
          "format": "int64"
        },
        "signatureDisclaimer": {
          "$ref": "#/definitions/SignatureDisclaimer"
        },
        "tipAmount": {
          "description": "Amount paid in tips",
          "type": "integer",
          "format": "int64"
        },
        "dccInfo": {
          "$ref": "#/definitions/DCCInfo"
        },
        "transactionInfo": {
          "$ref": "#/definitions/TransactionInfo"
        },
        "clientCreatedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "additionalCharges": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalChargeAmount"
          }
        },
        "appTracking": {
          "$ref": "#/definitions/AppTracking"
        },
        "taxAmount": {
          "description": "Amount paid in tax",
          "type": "integer",
          "format": "int64"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Role50": {
      "title": "role50",
      "example": "ADMIN",
      "type": "string",
      "enum": [
        "ADMIN",
        "MANAGER",
        "EMPLOYEE"
      ]
    },
    "Employee": {
      "title": "Employee",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/Role50"
        },
        "roles": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "payments": {
          "description": "This employee's payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "inviteSent": {
          "description": "Returns true if this employee was sent an invite to activate their account",
          "type": "boolean"
        },
        "customId": {
          "description": "Custom ID of the employee",
          "type": "string"
        },
        "employeeCards": {
          "description": "This employee's employee cards",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "pin": {
          "description": "Employee PIN (hashed)",
          "type": "string"
        },
        "isOwner": {
          "description": "Returns true if this employee is the owner account for this merchant",
          "type": "boolean"
        },
        "claimedTime": {
          "description": "Timestamp of when this employee claimed their account",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Full name of the employee",
          "type": "string"
        },
        "nickname": {
          "description": "Nickname of the employee (shows up on receipts)",
          "type": "string"
        },
        "shifts": {
          "description": "This employee's shifts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unhashedPin": {
          "description": "Employee PIN",
          "type": "string"
        },
        "orders": {
          "description": "This employee's orders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "deletedTime": {
          "description": "Timestamp of when this employee was deleted",
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "description": "Email of the employee (optional)",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Refund": {
      "title": "Refund",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Total amount refunded, including tax and tip",
          "type": "integer",
          "format": "int64"
        },
        "overrideMerchantTender": {
          "$ref": "#/definitions/Tender"
        },
        "voidReason": {
          "description": "",
          "type": "string"
        },
        "germanInfo": {
          "$ref": "#/definitions/GermanInfo"
        },
        "tipAmount": {
          "description": "Tip amount refunded",
          "type": "integer",
          "format": "int64"
        },
        "cardTransaction": {
          "$ref": "#/definitions/CardTransaction"
        },
        "taxableAmountRates": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxableAmountRate"
          }
        },
        "employee": {
          "$ref": "#/definitions/Reference"
        },
        "lineItems": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "clientCreatedTime": {
          "description": "The time when the refund was recorded on the client",
          "type": "integer",
          "format": "int64"
        },
        "serviceChargeAmount": {
          "$ref": "#/definitions/ServiceChargeAmount"
        },
        "additionalCharges": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalChargeAmount"
          }
        },
        "orderRef": {
          "$ref": "#/definitions/Reference"
        },
        "appTracking": {
          "$ref": "#/definitions/AppTracking"
        },
        "createdTime": {
          "description": "The time when the refund was recorded on the server",
          "type": "integer",
          "format": "int64"
        },
        "payment": {
          "$ref": "#/definitions/Reference"
        },
        "voided": {
          "description": "",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "taxAmount": {
          "description": "Tax amount refunded",
          "type": "integer",
          "format": "int64"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "HoursSet": {
      "title": "HoursSet",
      "type": "object",
      "properties": {
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "sunday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "saturday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "tuesday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "name": {
          "description": "Friendly name to describe the hours",
          "type": "string"
        },
        "wednesday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "thursday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "friday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "monday": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HourRange"
          }
        }
      }
    },
    "Module": {
      "title": "Module",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      }
    },
    "DCCInfo": {
      "title": "DCCInfo",
      "type": "object",
      "properties": {
        "marginRatePercentage": {
          "description": "Margin Rate Percentage",
          "type": "string"
        },
        "dccApplied": {
          "description": "Flag indicating whether DCC was applied on this txn",
          "type": "boolean"
        },
        "exchangeRate": {
          "description": "Exchange Rate",
          "type": "integer",
          "format": "int32"
        },
        "exchangeRateSourceTimeStamp": {
          "description": "Exchange Rate Source Timestamp",
          "type": "string"
        },
        "inquiryRateId": {
          "description": "Inquiry Rate ID (IPG)",
          "type": "integer",
          "format": "int64"
        },
        "exchangeRateSourceName": {
          "description": "Exchange Rate Source Name",
          "type": "string"
        },
        "foreignCurrencyCode": {
          "description": "Foreign currency code",
          "type": "string"
        },
        "foreignAmount": {
          "description": "Foreign (transaction) amount",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Type5556": {
      "title": "type5556",
      "example": "INTERAC",
      "type": "string",
      "enum": [
        "INTERAC"
      ]
    },
    "AdditionalChargeAmount": {
      "title": "AdditionalChargeAmount",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount of the additional charge",
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "description": "Additional charge id",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type5556"
        }
      }
    },
    "TipSuggestion": {
      "title": "TipSuggestion",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "Suggested tip percentage",
          "type": "integer",
          "format": "int64"
        },
        "isEnabled": {
          "description": "",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the tip",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Modification": {
      "title": "Modification",
      "type": "object",
      "properties": {
        "amount": {
          "description": "the additional cost of the modifier when it was applied",
          "type": "integer",
          "format": "int64"
        },
        "modifier": {
          "$ref": "#/definitions/Modifier"
        },
        "name": {
          "description": "the name of the modifier when it was applied",
          "type": "string"
        },
        "alternateName": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "quantitySold": {
          "description": "This is only used in reports. The count of how many of these modifiers that were sold.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Discount": {
      "title": "Discount",
      "type": "object",
      "properties": {
        "approver": {
          "$ref": "#/definitions/Reference"
        },
        "amount": {
          "description": "Discount amount in fraction of currency unit (e.g. cents) based on currency fraction digits supported",
          "type": "integer",
          "format": "int64"
        },
        "percentage": {
          "description": "Discount amount in percent",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Name of the discount",
          "type": "string"
        },
        "discount": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ModifierGroup": {
      "title": "ModifierGroup",
      "type": "object",
      "properties": {
        "maxAllowed": {
          "description": "The maximum amount of modifiers from this group that can be applied to associated lineItems when using Register",
          "type": "integer",
          "format": "int32"
        },
        "minRequired": {
          "description": "The minimum amount of modifiers from this group that must be applied to associated lineItems when using Register",
          "type": "integer",
          "format": "int32"
        },
        "sortOrder": {
          "description": "The ordinal value used to determine where in an ordered list this modifier group should appear relative to others.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the modifier group",
          "type": "string"
        },
        "alternateName": {
          "description": "",
          "type": "string"
        },
        "modifierIds": {
          "description": "An ordered, comma-separated list of modifier ids in this group. (READ ONLY)",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "modifiers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Modifier"
          }
        },
        "items": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "showByDefault": {
          "description": "Whether employees will be automatically prompted to add modifiers from this category when using Register",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ]
    },
    "HourRange": {
      "title": "HourRange",
      "type": "object",
      "properties": {
        "start": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "Type6263": {
      "title": "type6263",
      "example": "TAB",
      "type": "string",
      "enum": [
        "TAB",
        "AUTH"
      ]
    },
    "Authorization": {
      "title": "Authorization",
      "type": "object",
      "properties": {
        "authcode": {
          "description": "Authorization code",
          "type": "string"
        },
        "last4": {
          "description": "Last 4 digits of credit card used for authorization",
          "type": "string"
        },
        "note": {
          "description": "",
          "type": "string"
        },
        "tabName": {
          "description": "Name of tab",
          "type": "string"
        },
        "amount": {
          "description": "Amount authorized",
          "type": "integer",
          "format": "int64"
        },
        "closingPayment": {
          "$ref": "#/definitions/Payment"
        },
        "cardType": {
          "$ref": "#/definitions/CardType"
        },
        "createdTime": {
          "description": "Time authorization was recorded on server",
          "type": "integer",
          "format": "int64"
        },
        "payment": {
          "$ref": "#/definitions/Payment"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type6263"
        }
      }
    },
    "ServiceCharge": {
      "title": "ServiceCharge",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "DEPRECATED",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Service charge name",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "enabled": {
          "description": "If this service charge is enabled",
          "type": "boolean"
        },
        "percentageDecimal": {
          "description": "Percent to charge times 10000, e.g. 12.5% will be 125000",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Credit": {
      "title": "Credit",
      "type": "object",
      "properties": {
        "tender": {
          "$ref": "#/definitions/Tender"
        },
        "amount": {
          "description": "Amount paid",
          "type": "integer",
          "format": "int64"
        },
        "voidReason": {
          "description": "",
          "type": "string"
        },
        "germanInfo": {
          "$ref": "#/definitions/GermanInfo"
        },
        "cardTransaction": {
          "$ref": "#/definitions/CardTransaction"
        },
        "transactionSettings": {
          "$ref": "#/definitions/TransactionSettings"
        },
        "dccInfo": {
          "$ref": "#/definitions/DCCInfo"
        },
        "employee": {
          "$ref": "#/definitions/Reference"
        },
        "result": {
          "$ref": "#/definitions/Result"
        },
        "clientCreatedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "taxRates": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxableAmountRate"
          }
        },
        "orderRef": {
          "$ref": "#/definitions/Reference"
        },
        "appTracking": {
          "$ref": "#/definitions/AppTracking"
        },
        "createdTime": {
          "description": "Time payment was recorded on server",
          "type": "integer",
          "format": "int64"
        },
        "voided": {
          "description": "",
          "type": "boolean"
        },
        "creditRefunds": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditRefund"
          }
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "customers": {
          "$ref": "#/definitions/Customer"
        },
        "taxAmount": {
          "description": "Amount paid in tax",
          "type": "integer",
          "format": "int64"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Merchant": {
      "title": "Merchant",
      "type": "object",
      "properties": {
        "selfBoardingApplication": {
          "$ref": "#/definitions/Reference"
        },
        "payments": {
          "description": "This merchant's order payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "externalMerchants": {
          "description": "A list of external merchants for this merchant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalMerchant"
          }
        },
        "logos": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Logo"
          }
        },
        "programExpresses": {
          "description": "A list of program expresses for this merchant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MerchantProgramExpress"
          }
        },
        "modifierGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModifierGroup"
          }
        },
        "taxRates": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRate"
          }
        },
        "merchantGroups": {
          "description": "A list of merchant groups a merchant belongs to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "defaultCurrency": {
          "description": "",
          "type": "string"
        },
        "partnerApp": {
          "$ref": "#/definitions/Reference"
        },
        "createdTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "shifts": {
          "description": "This merchant's employees' shifts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shift"
          }
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "bankProcessing": {
          "$ref": "#/definitions/MerchantBankProcessing"
        },
        "owner": {
          "$ref": "#/definitions/Employee"
        },
        "tipSuggestions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TipSuggestion"
          }
        },
        "deviceBoardings": {
          "description": "A list of additional device boarding data for this merchant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MerchantDeviceBoarding"
          }
        },
        "website": {
          "description": "",
          "type": "string"
        },
        "printers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Printer"
          }
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "customerContactEmail": {
          "description": "Email address for customers to contact merchant through",
          "type": "string"
        },
        "devices": {
          "description": "A list of devices a merchant owns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "accountType": {
          "description": "The account type for the merchant. Used for reference merchants. See enterprise.ReferenceType",
          "type": "string"
        },
        "hierarchy": {
          "$ref": "#/definitions/MerchantHierarchy"
        },
        "reseller": {
          "$ref": "#/definitions/Reference"
        },
        "merchantPlan": {
          "$ref": "#/definitions/MerchantPlan"
        },
        "businessTypeCode": {
          "$ref": "#/definitions/BusinessTypeCode"
        },
        "tags": {
          "description": "This merchant's inventory tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "isBillable": {
          "description": "Returns true when the merchant is billable.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "",
          "type": "string"
        },
        "tenders": {
          "description": "This merchant's supported tenders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          }
        },
        "orderTypes": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderType"
          }
        },
        "name": {
          "description": "Name of the merchant",
          "type": "string"
        },
        "opening_hours": {
          "description": "This merchant's opening hours",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HoursSet"
          }
        },
        "merchantBoarding": {
          "$ref": "#/definitions/MerchantBoarding"
        },
        "orders": {
          "description": "This merchant's orders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "employees": {
          "description": "This merchant's employees",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          }
        },
        "items": {
          "description": "This merchant's inventory items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "properties": {
          "$ref": "#/definitions/MerchantProperties"
        },
        "gateway": {
          "$ref": "#/definitions/Gateway"
        }
      },
      "required": [
        "owner",
        "name"
      ]
    },
    "Gateway": {
      "title": "Gateway",
      "type": "object",
      "properties": {
        "acquiringBackEnd": {
          "description": "",
          "type": "string"
        },
        "authorizationFrontEnd": {
          "description": "",
          "type": "string"
        },
        "backendMid": {
          "description": "",
          "type": "string"
        },
        "accountName": {
          "description": "",
          "type": "string"
        },
        "production": {
          "description": "Field to identify whether the payment processor is real or demo. 'true' is returned for real payment processsor. 'false' is returned for demo payment processor.",
          "type": "boolean"
        },
        "groupId": {
          "description": "",
          "type": "string"
        },
        "paymentProcessorName": {
          "description": "",
          "type": "string"
        },
        "mid": {
          "description": "",
          "type": "string"
        },
        "fns": {
          "description": "",
          "type": "string"
        },
        "storeId": {
          "description": "",
          "type": "string"
        },
        "mcc": {
          "description": "Merchant Category Code",
          "type": "string"
        },
        "debitKeyCode": {
          "description": "",
          "type": "string"
        },
        "supportsMultiPayToken": {
          "description": "",
          "type": "boolean"
        },
        "tid": {
          "description": "",
          "type": "string"
        },
        "altMid": {
          "description": "",
          "type": "string"
        },
        "supportsNakedCredit": {
          "description": "",
          "type": "boolean"
        },
        "closingTime": {
          "description": "",
          "type": "string"
        },
        "paymentGatewayApi": {
          "description": "",
          "type": "string"
        },
        "supportsTipAdjust": {
          "description": "",
          "type": "boolean"
        },
        "frontendMid": {
          "description": "",
          "type": "string"
        },
        "tokenType": {
          "description": "",
          "type": "string"
        },
        "supportsTipping": {
          "description": "",
          "type": "boolean"
        },
        "newBatchCloseEnabled": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "TaxType": {
      "title": "taxType",
      "example": "VAT_TAXABLE",
      "type": "string",
      "enum": [
        "VAT_TAXABLE",
        "VAT_NON_TAXABLE",
        "VAT_EXEMPT",
        "INTERNAL_TAX"
      ]
    },
    "TaxRate": {
      "title": "TaxRate",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Timestamp when tax rate was last modified",
          "type": "integer",
          "format": "int64"
        },
        "isDefault": {
          "description": "",
          "type": "boolean"
        },
        "rate": {
          "description": "For percentage based discounts like sales tax",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "taxAmount": {
          "description": "For a flat tax like recycling redemption fee, expressed as number of cents",
          "type": "integer",
          "format": "int64"
        },
        "deletedTime": {
          "description": "Timestamp when tax rate was last deleted",
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "description": "Items associated with this tax rate",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "taxType": {
          "$ref": "#/definitions/TaxType"
        }
      },
      "required": [
        "name"
      ]
    },
    "SignatureDisclaimer": {
      "title": "SignatureDisclaimer",
      "type": "object",
      "properties": {
        "disclaimerText": {
          "description": "",
          "type": "string"
        }
      }
    },
    "SelectedService": {
      "title": "selectedService",
      "example": "NONE",
      "type": "string",
      "enum": [
        "NONE",
        "PAYMENT",
        "REFUND",
        "CANCELLATION",
        "PRE_AUTH",
        "UPDATE_PRE_AUTH",
        "PAYMENT_COMPLETION",
        "CASH_ADVANCE",
        "DEFERRED_PAYMENT",
        "DEFERRED_PAYMENT_COMPLETION",
        "VOICE_AUTHORISATION",
        "CARDHOLDER_DETECTION"
      ]
    },
    "AccountSelection": {
      "title": "accountSelection",
      "example": "CREDIT",
      "type": "string",
      "enum": [
        "CREDIT",
        "DEBIT",
        "CHECKING",
        "SAVINGS"
      ]
    },
    "TransactionResult": {
      "title": "transactionResult",
      "example": "APPROVED",
      "type": "string",
      "enum": [
        "APPROVED",
        "DECLINED",
        "ABORTED",
        "VOICE_AUTHORISATION",
        "PAYMENT_PART_ONLY",
        "PARTIALLY_APPROVED",
        "NONE"
      ]
    },
    "ReversalReason": {
      "title": "reversalReason",
      "example": "CHIP_DECLINE",
      "type": "string",
      "enum": [
        "CHIP_DECLINE",
        "CARDHOLDER_CANCELLATION",
        "COMMUNICATION_ERROR",
        "OTHER_REASON"
      ]
    },
    "TxFormat": {
      "title": "txFormat",
      "example": "DEFAULT",
      "type": "string",
      "enum": [
        "DEFAULT",
        "NEXO"
      ]
    },
    "TransactionInfo": {
      "title": "TransactionInfo",
      "type": "object",
      "properties": {
        "receiptExtraData": {
          "description": "Extra data for receipt",
          "type": "string"
        },
        "selectedService": {
          "$ref": "#/definitions/SelectedService"
        },
        "identityDocument": {
          "$ref": "#/definitions/IdentityDocument"
        },
        "accountSelection": {
          "$ref": "#/definitions/AccountSelection"
        },
        "reversalMacKsn": {
          "description": "MAC KSN for reversal",
          "type": "string"
        },
        "transactionLocale": {
          "description": "Locale for the transaction (e.g. en-CA)",
          "type": "string"
        },
        "maskedTrack2": {
          "description": "Masked track2 data",
          "type": "string"
        },
        "installmentsPlanDesc": {
          "description": "AR Installments: selected plan desc",
          "type": "string"
        },
        "transactionResult": {
          "$ref": "#/definitions/TransactionResult"
        },
        "transactionTags": {
          "description": "Contains a hex string with needed TLV tags for certification",
          "type": "string"
        },
        "merchantIdentifier": {
          "description": "When concatenated with the Acquirer Identifier, uniquely identifies a given merchant",
          "type": "string"
        },
        "reversalReason": {
          "$ref": "#/definitions/ReversalReason"
        },
        "merchantNameLocation": {
          "description": "Indicates the name and location of the merchant",
          "type": "string"
        },
        "receiptNumber": {
          "description": "Transaction Receipt Number",
          "type": "string"
        },
        "reversalMac": {
          "description": "MAC for reversal",
          "type": "string"
        },
        "batchNumber": {
          "description": "Transaction Batch Number",
          "type": "string"
        },
        "txFormat": {
          "$ref": "#/definitions/TxFormat"
        },
        "fiscalInvoiceNumber": {
          "description": "Consists of 4 digits prefix + 8 digits",
          "type": "string"
        },
        "installmentsPlanCode": {
          "description": "AR Installments: plan alphanum code",
          "type": "string"
        },
        "installmentsQuantity": {
          "description": "AR Installments: number of installments",
          "type": "integer",
          "format": "int32"
        },
        "terminalIdentification": {
          "description": "Designates the unique location of a terminal at a merchant",
          "type": "string"
        },
        "languageIndicator": {
          "description": "2 character language used for the transaction.  Deprecated in factor of transactionLocale.",
          "type": "string"
        },
        "stan": {
          "description": "STAN(System Audit Trace Number)",
          "type": "integer",
          "format": "int32"
        },
        "reversalStan": {
          "description": "STAN for reversal",
          "type": "integer",
          "format": "int32"
        },
        "installmentsPlanId": {
          "description": "AR Installments: selected plan id",
          "type": "string"
        },
        "cardTypeLabel": {
          "description": "Card type label",
          "type": "string"
        }
      }
    },
    "VaultedCard": {
      "title": "VaultedCard",
      "type": "object",
      "properties": {
        "last4": {
          "description": "",
          "type": "string"
        },
        "cardholderName": {
          "description": "",
          "type": "string"
        },
        "first6": {
          "description": "",
          "type": "string"
        },
        "expirationDate": {
          "description": "",
          "type": "string"
        },
        "token": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "last4",
        "first6"
      ]
    },
    "Modifier": {
      "title": "Modifier",
      "type": "object",
      "properties": {
        "price": {
          "description": "Additional cost when used",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Name of the modifier",
          "type": "string"
        },
        "modifierGroup": {
          "$ref": "#/definitions/Reference"
        },
        "alternateName": {
          "description": "Alternate name of the modifier",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      },
      "required": [
        "price",
        "name"
      ]
    },
    "MerchantBoarding": {
      "title": "MerchantBoarding",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "When record updated",
          "type": "integer",
          "format": "int64"
        },
        "faxPhone": {
          "description": "Merchant fax number",
          "type": "string"
        },
        "parentMerchantId": {
          "description": "ID of merchant's parent",
          "type": "string"
        },
        "visaIram": {
          "description": "",
          "type": "string"
        },
        "retailDescription": {
          "description": "Retail description",
          "type": "string"
        },
        "sourceIndicator": {
          "description": "Source indicator",
          "type": "string"
        },
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "participantRelationship": {
          "description": "Participant relationship",
          "type": "string"
        },
        "mastercardDebitAccept": {
          "description": "Does merchant accept MasterCard debit",
          "type": "string"
        },
        "dynamicDba": {
          "description": "True if allows dynamic Doing Business As (DBA)",
          "type": "boolean"
        },
        "creditLimit": {
          "description": "Credit limit",
          "type": "integer",
          "format": "int32"
        },
        "createdTime": {
          "description": "When record created",
          "type": "integer",
          "format": "int64"
        },
        "transArmorKey": {
          "description": "FD TransArmor public key",
          "type": "string"
        },
        "signingKey": {
          "description": "Signing key",
          "type": "string"
        },
        "preferredMerchant": {
          "description": "Preferred merchant flag",
          "type": "string"
        },
        "taxExempt": {
          "description": "True if merchant is tax exempt",
          "type": "boolean"
        },
        "directMarketing": {
          "description": "Direct marketing",
          "type": "string"
        },
        "viRelationshipParticipant": {
          "description": "VI relationship participant",
          "type": "string"
        },
        "achBankId": {
          "description": "ID of automated clearing house bank",
          "type": "string"
        },
        "transArmorIndicator": {
          "description": "TransArmor indicator",
          "type": "string"
        },
        "agentBankIndicator": {
          "description": "Agent bank indicator",
          "type": "string"
        },
        "multiCurrencyIndicator": {
          "description": "Multi-currency indicator",
          "type": "string"
        },
        "emvAllowed": {
          "description": "Is EMV chip allowed",
          "type": "string"
        },
        "taxId": {
          "description": "tax id of this merchant",
          "type": "string"
        },
        "chargeBackRetrievalAddressFlag": {
          "description": "Charge back retrieval address flag",
          "type": "string"
        },
        "internetIndicator": {
          "description": "Merchant internet indicator",
          "type": "string"
        },
        "salesman": {
          "description": "Salesman",
          "type": "string"
        },
        "processMode": {
          "description": "Process mode",
          "type": "string"
        },
        "seasonal": {
          "description": "True if merchant is a seasonal business",
          "type": "boolean"
        },
        "recurringFlag": {
          "description": "Recurring flag",
          "type": "string"
        },
        "altValueLinkMid": {
          "description": "Alternative ValueLink MID",
          "type": "string"
        },
        "accountStatus": {
          "description": "Status of the account",
          "type": "string"
        },
        "merchantAuthType": {
          "description": "Merchant authorization type",
          "type": "string"
        },
        "valueLink": {
          "description": "True if merchant supports ValueLink",
          "type": "boolean"
        },
        "linkTo": {
          "description": "Link to",
          "type": "string"
        },
        "valueLinkMid": {
          "description": "ValueLink MID",
          "type": "string"
        },
        "externalMerchant": {
          "description": "",
          "type": "boolean"
        },
        "processSettlement": {
          "description": "Process settlement",
          "type": "string"
        },
        "relationshipManager": {
          "description": "Relationship manager",
          "type": "string"
        },
        "merchantType": {
          "description": "Type of merchant",
          "type": "string"
        },
        "saleLimit": {
          "description": "Sale limit",
          "type": "integer",
          "format": "int32"
        },
        "previousAccountStatus": {
          "description": "Previous status of account",
          "type": "string"
        },
        "bankNumber": {
          "description": "Bank Number",
          "type": "string"
        },
        "receiptDba": {
          "description": "Doing Business As (DBA) receipt",
          "type": "string"
        },
        "foreignDomesticIndicator": {
          "description": "Indicates foreign or domestic merchant",
          "type": "string"
        },
        "linkFrom": {
          "description": "Link from",
          "type": "string"
        },
        "merchantData": {
          "description": "Merchant data",
          "type": "string"
        },
        "billToName": {
          "description": "The name to bill the merchant to",
          "type": "string"
        },
        "store": {
          "description": "Store identifier",
          "type": "string"
        },
        "multiMerchantType": {
          "description": "Type of Multi-Merchant terminal",
          "type": "string"
        },
        "nonMpaIndicator": {
          "description": "",
          "type": "string"
        },
        "authLimit": {
          "description": "Authorization limit",
          "type": "integer",
          "format": "int32"
        },
        "sysPrin": {
          "description": "Sys-Prin of reseller channel for this merchant",
          "type": "string"
        },
        "daylightSavings": {
          "description": "Indicator if daylight savings followed by merchant",
          "type": "boolean"
        },
        "accountFunding": {
          "description": "Account funding",
          "type": "string"
        },
        "leaseCompanyCode": {
          "description": "Lease company code",
          "type": "string"
        },
        "clientRepresentative": {
          "description": "Client representative",
          "type": "string"
        },
        "visaDebitAccept": {
          "description": "Does merchant accept Visa debit",
          "type": "string"
        }
      }
    },
    "Reference": {
      "title": "Reference",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      }
    },
    "PaymentProcessor": {
      "title": "PaymentProcessor",
      "type": "object",
      "properties": {
        "production": {
          "description": "",
          "type": "boolean"
        },
        "paymentGatewayApi": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Reseller": {
      "title": "Reseller",
      "type": "object",
      "properties": {
        "featuredApps": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "supportPhone": {
          "description": "",
          "type": "string"
        },
        "isIntercomEnabled": {
          "description": "",
          "type": "boolean"
        },
        "locale": {
          "description": "Language/country of the reseller in locale format",
          "type": "string"
        },
        "defaultProcessorKey": {
          "$ref": "#/definitions/ProcessorKey"
        },
        "partnerSupportEmail": {
          "description": "",
          "type": "string"
        },
        "isRkiIdentifier": {
          "description": "",
          "type": "boolean"
        },
        "merchantPlanGroup": {
          "$ref": "#/definitions/Reference"
        },
        "supportsOutboundBoarding": {
          "description": "",
          "type": "boolean"
        },
        "enforceMerchantPlan": {
          "description": "",
          "type": "boolean"
        },
        "createdTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "fdClientId": {
          "description": "First Data Client ID",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Account"
        },
        "defaultCountryCode": {
          "description": "",
          "type": "string"
        },
        "broadcastMessage": {
          "$ref": "#/definitions/Reference"
        },
        "alternateName": {
          "description": "Alternate FD name of the reseller",
          "type": "string"
        },
        "forcePhone": {
          "description": "",
          "type": "boolean"
        },
        "filterApps": {
          "description": "",
          "type": "boolean"
        },
        "isSelfBoarding": {
          "description": "",
          "type": "boolean"
        },
        "supportEmail": {
          "description": "",
          "type": "string"
        },
        "supportsNakedCredit": {
          "description": "",
          "type": "boolean"
        },
        "parentReseller": {
          "$ref": "#/definitions/Reseller"
        },
        "name": {
          "description": "Name of the reseller",
          "type": "string"
        },
        "tasqCustomerNumber": {
          "description": "",
          "type": "string"
        },
        "isBulkPurchaser": {
          "description": "",
          "type": "boolean"
        },
        "defaultPaymentProcessor": {
          "$ref": "#/definitions/PaymentProcessor"
        },
        "stationsOnClassic": {
          "description": "",
          "type": "boolean"
        },
        "brandAssets": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "LineItem": {
      "title": "LineItem",
      "type": "object",
      "properties": {
        "orderLevelDiscountAmount": {
          "description": "The calculated sum of order level discounts attributed, approximately to the nearest cent, to this the line item. This is only used in reporting.",
          "type": "integer",
          "format": "int64"
        },
        "note": {
          "description": "",
          "type": "string"
        },
        "userData": {
          "description": "",
          "type": "string"
        },
        "priceWithModifiersAndItemAndOrderDiscounts": {
          "description": "Price of item after adding all modifications and subtracting all line item and order level discounts. This is used only for reporting.",
          "type": "integer",
          "format": "int64"
        },
        "itemCode": {
          "description": "",
          "type": "string"
        },
        "payments": {
          "description": "Payments that apply to this line item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemPayment"
          }
        },
        "discountAmount": {
          "description": "Unnamed fixed discount amount in cents. Or, in reporting, this may be the calculated sum of all the line item discounts.",
          "type": "integer",
          "format": "int64"
        },
        "revenueAmount": {
          "description": "Revenue collected for this. This field is only used in reporting.",
          "type": "integer",
          "format": "int64"
        },
        "orderLevelDiscounts": {
          "description": "List of order level discounts attributed to this line item. Amounts are rounded to the nearest penny. This is for reporting purposes only. These rounding approximates are not used when calculating the transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        },
        "exchangedLineItem": {
          "$ref": "#/definitions/Reference"
        },
        "taxRates": {
          "description": "Tax rates that apply to this line item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRate"
          }
        },
        "discounts": {
          "description": "List of line item discounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        },
        "price": {
          "description": "Price of the item, typically in cents of merchant currency. When unit quantity is not null then this is the price for a single unit and is not the complete price.",
          "type": "integer",
          "format": "int64"
        },
        "createdTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "refunded": {
          "description": "True if this line item has been refunded",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier.",
          "type": "string"
        },
        "quantitySold": {
          "description": "Quantity sold for this line item. This field is only used in reporting",
          "type": "integer",
          "format": "int32"
        },
        "orderClientCreatedTime": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "modifications": {
          "description": "List of references to modifications applied to this line item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Modification"
          }
        },
        "item": {
          "$ref": "#/definitions/Reference"
        },
        "unitName": {
          "description": "Unit name (e.g. oz, lb, etc) if priced by unit, otherwise null.",
          "type": "string"
        },
        "alternateName": {
          "description": "Alternate name of the line item.",
          "type": "string"
        },
        "isRevenue": {
          "description": "True if this item should be counted as revenue, for example gift cards and donations would not.",
          "type": "boolean"
        },
        "priceWithModifiers": {
          "description": "Price of item after adding all modifications. This is used only for reporting.",
          "type": "integer",
          "format": "int64"
        },
        "binName": {
          "description": "",
          "type": "string"
        },
        "printed": {
          "description": "True if this line item has been printed out on an order printer at least once already.",
          "type": "boolean"
        },
        "name": {
          "description": "Line item name.",
          "type": "string"
        },
        "unitQty": {
          "description": "Unit quantity if this line item is priced by quantity, or null if the item is not priced by quantity. The value is a fixed-point integer with scaling factor of 1000 (e.g. if charging by ounces then the value should be set to 2500 for 2.5 ounces). To compute the complete price perform the following calculation: PRICE * (UNIT QTY / 1000).",
          "type": "integer",
          "format": "int32"
        },
        "exchanged": {
          "description": "",
          "type": "boolean"
        },
        "refund": {
          "$ref": "#/definitions/Refund"
        }
      }
    },
    "Tender": {
      "title": "Tender",
      "type": "object",
      "properties": {
        "instructions": {
          "description": "Label Key",
          "type": "string"
        },
        "visible": {
          "description": "If this merchant tender is visible",
          "type": "boolean"
        },
        "editable": {
          "description": "If this merchant tender is editable",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "label": {
          "description": "Label Key",
          "type": "string"
        },
        "labelKey": {
          "description": "Label Key",
          "type": "string"
        },
        "opensCashDrawer": {
          "description": "If this tender opens the cash drawer",
          "type": "boolean"
        },
        "supportsTipping": {
          "description": "Allow tipping on payment from tender",
          "type": "boolean"
        },
        "enabled": {
          "description": "If this merchant tender is enabled",
          "type": "boolean"
        }
      }
    },
    "PaymentTaxRate": {
      "title": "PaymentTaxRate",
      "type": "object",
      "properties": {
        "taxableAmount": {
          "description": "The sub-total of line items that the tax was based on. For VAT, this amount includes tax. For all others, this amount does not include tax.",
          "type": "integer",
          "format": "int64"
        },
        "isDefault": {
          "description": "Whether the tax rate was configued as a default tax rate at the time that the payment was created.",
          "type": "boolean"
        },
        "isVat": {
          "description": "Whether merchant is configured as VAT",
          "type": "boolean"
        },
        "rate": {
          "description": "The tax rate. 100% = 1e7.",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Tax rate name. This field is optional.",
          "type": "string"
        },
        "id": {
          "description": "Tax rate id.",
          "type": "string"
        },
        "taxAmount": {
          "description": "The amount of tax collected. In cases where there are multiple payments for an order then it may be necessary to add an extra cent of tax to the last payment.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "taxableAmount",
        "rate",
        "name"
      ]
    },
    "LogoType": {
      "title": "logoType",
      "example": "BUSINESS",
      "type": "string",
      "enum": [
        "BUSINESS",
        "RECEIPT"
      ]
    },
    "Logo": {
      "title": "Logo",
      "type": "object",
      "properties": {
        "logoFilename": {
          "description": "The filename of the logo",
          "type": "string"
        },
        "logoType": {
          "$ref": "#/definitions/LogoType"
        },
        "url": {
          "description": "URL of the logo file. Generated from filename.",
          "type": "string"
        }
      },
      "required": [
        "logoFilename",
        "logoType"
      ]
    },
    "AppTracking": {
      "title": "AppTracking",
      "type": "object",
      "properties": {
        "developerAppId": {
          "description": "The uuid from the developer application.  This is typically populated and used only on the back end.",
          "type": "string"
        },
        "applicationVersion": {
          "description": "A string representing a semanticversion.  See http://semver.org/",
          "type": "string"
        },
        "sourceSDKVersion": {
          "description": "A string representing a semanticversion.  See http://semver.org/",
          "type": "string"
        },
        "sourceSDK": {
          "description": "A string representing a SDK",
          "type": "string"
        },
        "applicationID": {
          "description": "A string representing an application",
          "type": "string"
        },
        "applicationName": {
          "description": "The name of the developer application.",
          "type": "string"
        }
      }
    },
    "OrderTaxRate": {
      "title": "OrderTaxRate",
      "type": "object",
      "properties": {
        "amount": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "amount",
        "name"
      ]
    },
    "ProcessorKey": {
      "title": "ProcessorKey",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Equipment": {
      "title": "Equipment",
      "type": "object",
      "properties": {
        "boardedBundleIndicator": {
          "description": "The bundle indicator that was provided for the equipment during boarding",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number associate with the device.",
          "type": "string"
        },
        "provisionedBundleId": {
          "description": "",
          "type": "string"
        },
        "equipmentCode": {
          "description": "The equipment code for the equipment received through boarding.",
          "type": "string"
        },
        "boardedBundleId": {
          "description": "",
          "type": "string"
        },
        "equipmentNumber": {
          "description": "The equipment number from FDPOS assigned to this merchant",
          "type": "string"
        },
        "provisionedBundleIndicator": {
          "description": "The bundle indicator that was provided during provisioning.",
          "type": "string"
        },
        "equipmentCodeDesc": {
          "description": "Human friendly description of the equipment code",
          "type": "string"
        },
        "provisioned": {
          "description": "Signifies if the equipment has been provisioned or not",
          "type": "boolean"
        },
        "merchantId": {
          "description": "",
          "type": "string"
        },
        "provisionedDeviceType": {
          "description": "The device type assigned to the provisioned portion of this equipment.",
          "type": "string"
        },
        "provisionBundleEffectiveTime": {
          "description": "The time that the bundle is associated with the provisioned device.",
          "type": "integer",
          "format": "int64"
        },
        "boarded": {
          "description": "Signifies if the equipment information has been provided as part of boarding messages",
          "type": "boolean"
        }
      }
    },
    "SystemOrderType": {
      "title": "SystemOrderType",
      "type": "object",
      "properties": {
        "isFsr": {
          "description": "Is for full service restraunts?",
          "type": "boolean"
        },
        "isRetail": {
          "description": "Is for retail stores?",
          "type": "boolean"
        },
        "id": {
          "description": "Unqiue identifier",
          "type": "string"
        },
        "isQsr": {
          "description": "Is for quick service restraunts?",
          "type": "boolean"
        },
        "labelKey": {
          "description": "Label Key",
          "type": "string"
        }
      }
    },
    "MerchantDeviceBoarding": {
      "title": "MerchantDeviceBoarding",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Date record updated",
          "type": "integer",
          "format": "int64"
        },
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "serialNumber": {
          "description": "",
          "type": "string"
        },
        "createdTime": {
          "description": "Date record created",
          "type": "integer",
          "format": "int64"
        },
        "bundleIndicator": {
          "description": "",
          "type": "string"
        },
        "transArmorIndicator": {
          "description": "TransArmor indicator",
          "type": "string"
        },
        "businessType": {
          "description": "Business type",
          "type": "string"
        },
        "equipmentNumber": {
          "description": "Equipment number",
          "type": "string"
        },
        "productType": {
          "description": "Device product type",
          "type": "string"
        },
        "forceCloseTime": {
          "description": "Force close time",
          "type": "string"
        },
        "status": {
          "description": "Device status",
          "type": "string"
        },
        "removalTime": {
          "description": "Date device removed from merchant",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BundleState": {
      "title": "bundleState",
      "example": "COMPLETE",
      "type": "string",
      "enum": [
        "COMPLETE",
        "BROKEN",
        "UNBUNDLED",
        "BOARDING_PROVISION_DISCONNECT",
        "BOARDING_PROVISION_BUNDLE_CONFLICT",
        "BROKEN_PROVISION",
        "BROKEN_BOARDING"
      ]
    },
    "DeviceBundleState": {
      "title": "DeviceBundleState",
      "type": "object",
      "properties": {
        "deviceBundle": {
          "$ref": "#/definitions/Reference"
        },
        "bundleState": {
          "$ref": "#/definitions/BundleState"
        }
      }
    },
    "MerchantPlan": {
      "title": "MerchantPlan",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Date/time this plan was last modified.",
          "type": "integer",
          "format": "int64"
        },
        "reseller": {
          "$ref": "#/definitions/Reseller"
        },
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "billToMid": {
          "description": "If true then billing will charge monthly fee regardless of device status or count.",
          "type": "boolean"
        },
        "appBundle": {
          "$ref": "#/definitions/AppBundle"
        },
        "modules": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Module"
          }
        },
        "planCode": {
          "description": "First data plan code",
          "type": "string"
        },
        "deactivationTime": {
          "description": "Date/time when this plan becomes inactive. If null then no end of life.",
          "type": "integer",
          "format": "int64"
        },
        "merchantPlanGroup": {
          "$ref": "#/definitions/Reference"
        },
        "price": {
          "description": "",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the merchant plan",
          "type": "string"
        },
        "defaultPlan": {
          "description": "If true and multiple plans of this code then treat as default plan for reseller. Cannot use word default.",
          "type": "boolean"
        },
        "createdTime": {
          "description": "Date/time this plan was created.",
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "activationTime": {
          "description": "Date/time when this plan becomes active. If null then active now.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PhoneNumber": {
      "title": "PhoneNumber",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "",
          "type": "string"
        },
        "id": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "phoneNumber"
      ]
    },
    "ExternalMerchant": {
      "title": "ExternalMerchant",
      "type": "object",
      "properties": {
        "modifiedTime": {
          "description": "Date record updated",
          "type": "integer",
          "format": "int64"
        },
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "usageFlag": {
          "description": "Usage flag",
          "type": "string"
        },
        "auditUserId": {
          "description": "User performing audit",
          "type": "string"
        },
        "xrefType": {
          "description": "Cross reference type",
          "type": "string"
        },
        "clientFlag": {
          "description": "Client flag",
          "type": "string"
        },
        "createdTime": {
          "description": "Date record created",
          "type": "integer",
          "format": "int64"
        },
        "externalMerchantNumber": {
          "description": "External merchant number",
          "type": "string"
        },
        "auditDate": {
          "description": "Date of audit",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Tag": {
      "title": "Tag",
      "type": "object",
      "properties": {
        "printers": {
          "description": "Printers associated with this tag",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Tag name",
          "type": "string"
        },
        "showInReporting": {
          "description": "True if tag is a summary label in the reporting app",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "items": {
          "description": "Items associated with this tag",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "MerchantProgramExpress": {
      "title": "MerchantProgramExpress",
      "type": "object",
      "properties": {
        "merchantRef": {
          "$ref": "#/definitions/Reference"
        },
        "programCode": {
          "description": "Program Code",
          "type": "string"
        },
        "keyDescription": {
          "description": "Key description",
          "type": "string"
        },
        "programCodeDescription": {
          "description": "Description of Program Code",
          "type": "string"
        },
        "valueDescription": {
          "description": "Description of value",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        },
        "key": {
          "description": "Key",
          "type": "string"
        }
      }
    }
  }
}
